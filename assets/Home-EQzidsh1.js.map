{"version":3,"file":"Home-EQzidsh1.js","sources":["../../src/hooks/useHNSearch.ts","../../src/components/Article.tsx","../../node_modules/@zag-js/pagination/dist/index.mjs","../../src/components/Pagination.tsx","../../src/routes/Home.tsx"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { useSearchParams } from 'react-router-dom';\nimport api from '../api';\nimport { GetArticleResponse } from '../api/types';\nimport { hnAPIBaseURL, queryParamsMapping } from '../constants';\n\nconst useHNSearch = () => {\n  const [searchParams] = useSearchParams();\n\n  const tags = searchParams.get(queryParamsMapping.tags);\n  const searchQuery = searchParams.get(queryParamsMapping.query);\n  const page = searchParams.get(queryParamsMapping.page);\n\n  const getQueryString = () => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set(queryParamsMapping.tags, `(${tags || 'front_page'})`);\n    params.set(queryParamsMapping.page, (parseInt(page ?? '1') - 1).toString());\n\n    if (searchQuery) {\n      params.set(\n        queryParamsMapping.restrictSearchableAttributes,\n        'title,comment_text,url,story_text,author'\n      );\n      params.set(queryParamsMapping.tags, 'story');\n      params.set(queryParamsMapping.query, searchQuery);\n    }\n\n    return params.toString();\n  };\n\n  const queryString = getQueryString();\n\n  const searchBy = searchQuery ? 'search_by_date' : 'search';\n\n  const query = useQuery({\n    queryKey: ['HN', queryString],\n    queryFn: () =>\n      api<GetArticleResponse>(`${hnAPIBaseURL}/${searchBy}?${queryString}`),\n  });\n  return query;\n};\n\nexport default useHNSearch;\n","import { timeAgo } from '../utils';\n\ninterface ArticaleProps {\n  title: string;\n  link?: string;\n  upvotesCount: number;\n  commentsCount: number;\n  createdBy: string;\n  createdAt: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst Article = ({\n  title,\n  createdBy,\n  upvotesCount,\n  commentsCount,\n  createdAt,\n  link,\n  onClick,\n}: ArticaleProps) => {\n  return (\n    <div\n      className=\"item cursor-pointer py-4 px-5 border bg-opacity-25 border-transparent transition hover:border-primary-500 dark:hover:bg-primary-600 dark:hover:bg-opacity-[0.1] border-b group\"\n      onClick={onClick}\n    >\n      <div className=\"w-full\">\n        <h4 className=\"font-bold dark:font-semibold tracking-wide text-lg leading-tight\">\n          {title}\n        </h4>\n        {link ? (\n          <div className=\"w-full overflow-hidden\">\n            <a\n              className=\"inline-block mt-2 text-sm text-gray-600 dark:text-gray-400 leading-tight truncate min-w-0 font-medium\"\n              href={link}\n              target=\"_blank\"\n              rel=\"noopener\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              {link}\n            </a>\n          </div>\n        ) : null}\n        <div className=\"flex mt-1 items-center justify-between flex-wrap\">\n          <div className=\"font-semibold text-sm mr-2 flex items-center flex-shrink-0 text-primary-700 dark:text-primary-600 text-opacity-100\">\n            <span className=\"font-bold\">{upvotesCount}</span>\n            <span className=\"mx-2\">•</span>\n            <span className=\"opacity-90\">{createdBy}</span>\n            <span className=\"text-gray-400 dark:text-gray-500 mx-2\">•</span>\n            <span className=\"text-gray-500 text-xs font-medium\">\n              {timeAgo(createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"comments uppercase text-xs transition font-semibold group-hover:font-bold text-gray-600 dark:text-gray-400 group-hover:text-white\">\n              {commentsCount} Comments\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Article;\n","// src/pagination.anatomy.ts\nimport { createAnatomy } from \"@zag-js/anatomy\";\nvar anatomy = createAnatomy(\"pagination\").parts(\"root\", \"item\", \"ellipsis\", \"prevTrigger\", \"nextTrigger\");\nvar parts = anatomy.build();\n\n// src/pagination.connect.ts\nimport { dataAttr } from \"@zag-js/dom-query\";\n\n// src/pagination.dom.ts\nimport { createScope } from \"@zag-js/dom-query\";\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `pagination:${ctx.id}`,\n  getPrevTriggerId: (ctx) => ctx.ids?.prevTrigger ?? `pagination:${ctx.id}:prev`,\n  getNextTriggerId: (ctx) => ctx.ids?.nextTrigger ?? `pagination:${ctx.id}:next`,\n  getEllipsisId: (ctx, index) => ctx.ids?.ellipsis?.(index) ?? `pagination:${ctx.id}:ellipsis:${index}`,\n  getItemId: (ctx, page) => ctx.ids?.item?.(page) ?? `pagination:${ctx.id}:item:${page}`\n});\n\n// src/pagination.utils.ts\nvar range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\nvar transform = (items) => {\n  return items.map((value) => {\n    if (typeof value === \"number\")\n      return { type: \"page\", value };\n    return { type: \"ellipsis\" };\n  });\n};\nvar ELLIPSIS = \"ellipsis\";\nvar getRange = (ctx) => {\n  const totalPageNumbers = Math.min(2 * ctx.siblingCount + 5, ctx.totalPages);\n  const firstPageIndex = 1;\n  const lastPageIndex = ctx.totalPages;\n  const leftSiblingIndex = Math.max(ctx.page - ctx.siblingCount, firstPageIndex);\n  const rightSiblingIndex = Math.min(ctx.page + ctx.siblingCount, lastPageIndex);\n  const showLeftEllipsis = leftSiblingIndex > firstPageIndex + 1;\n  const showRightEllipsis = rightSiblingIndex < lastPageIndex - 1;\n  const itemCount = totalPageNumbers - 2;\n  if (!showLeftEllipsis && showRightEllipsis) {\n    const leftRange = range(1, itemCount);\n    return [...leftRange, ELLIPSIS, lastPageIndex];\n  }\n  if (showLeftEllipsis && !showRightEllipsis) {\n    const rightRange = range(lastPageIndex - itemCount + 1, lastPageIndex);\n    return [firstPageIndex, ELLIPSIS, ...rightRange];\n  }\n  if (showLeftEllipsis && showRightEllipsis) {\n    const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n    return [firstPageIndex, ELLIPSIS, ...middleRange, ELLIPSIS, lastPageIndex];\n  }\n  const fullRange = range(firstPageIndex, lastPageIndex);\n  return fullRange;\n};\nvar getTransformedRange = (ctx) => transform(getRange(ctx));\n\n// src/pagination.connect.ts\nfunction connect(state, send, normalize) {\n  const totalPages = state.context.totalPages;\n  const page = state.context.page;\n  const translations = state.context.translations;\n  const previousPage = state.context.previousPage;\n  const nextPage = state.context.nextPage;\n  const pageRange = state.context.pageRange;\n  const type = state.context.type;\n  const isButton = type === \"button\";\n  const isFirstPage = page === 1;\n  const isLastPage = page === totalPages;\n  return {\n    page,\n    totalPages,\n    pages: getTransformedRange(state.context),\n    previousPage,\n    nextPage,\n    pageRange,\n    isFirstPage,\n    isLastPage,\n    slice(data) {\n      return data.slice(pageRange.start, pageRange.end);\n    },\n    setCount(count) {\n      send({ type: \"SET_COUNT\", count });\n    },\n    setPageSize(size) {\n      send({ type: \"SET_PAGE_SIZE\", size });\n    },\n    setPage(page2) {\n      send({ type: \"SET_PAGE\", page: page2 });\n    },\n    rootProps: normalize.element({\n      id: dom.getRootId(state.context),\n      ...parts.root.attrs,\n      dir: state.context.dir,\n      \"aria-label\": translations.rootLabel\n    }),\n    getEllipsisProps(props) {\n      return normalize.element({\n        id: dom.getEllipsisId(state.context, props.index),\n        ...parts.ellipsis.attrs,\n        dir: state.context.dir\n      });\n    },\n    getItemProps(props) {\n      const index = props.value;\n      const isCurrentPage = index === state.context.page;\n      return normalize.element({\n        id: dom.getItemId(state.context, index),\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"data-index\": index,\n        \"data-selected\": dataAttr(isCurrentPage),\n        \"aria-current\": isCurrentPage ? \"page\" : void 0,\n        \"aria-label\": translations.itemLabel?.({ page: index, totalPages }),\n        onClick() {\n          send({ type: \"SET_PAGE\", page: index });\n        },\n        ...isButton && { type: \"button\" }\n      });\n    },\n    prevTriggerProps: normalize.element({\n      id: dom.getPrevTriggerId(state.context),\n      ...parts.prevTrigger.attrs,\n      dir: state.context.dir,\n      \"data-disabled\": dataAttr(isFirstPage),\n      \"aria-label\": translations.prevTriggerLabel,\n      onClick() {\n        send({ type: \"PREVIOUS_PAGE\" });\n      },\n      ...isButton && { disabled: isFirstPage, type: \"button\" }\n    }),\n    nextTriggerProps: normalize.element({\n      id: dom.getNextTriggerId(state.context),\n      ...parts.nextTrigger.attrs,\n      dir: state.context.dir,\n      \"data-disabled\": dataAttr(isLastPage),\n      \"aria-label\": translations.nextTriggerLabel,\n      onClick() {\n        send({ type: \"NEXT_PAGE\" });\n      },\n      ...isButton && { disabled: isLastPage, type: \"button\" }\n    })\n  };\n}\n\n// src/pagination.machine.ts\nimport { createMachine } from \"@zag-js/core\";\nimport { compact, isEqual } from \"@zag-js/utils\";\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"pagination\",\n      initial: \"idle\",\n      context: {\n        pageSize: 10,\n        siblingCount: 1,\n        page: 1,\n        type: \"button\",\n        translations: {\n          rootLabel: \"pagination\",\n          prevTriggerLabel: \"previous page\",\n          nextTriggerLabel: \"next page\",\n          itemLabel({ page, totalPages }) {\n            const isLastPage = totalPages > 1 && page === totalPages;\n            return `${isLastPage ? \"last page, \" : \"\"}page ${page}`;\n          },\n          ...ctx.translations\n        },\n        ...ctx\n      },\n      watch: {\n        pageSize: [\"setPageIfNeeded\"]\n      },\n      computed: {\n        totalPages: (ctx2) => Math.ceil(ctx2.count / ctx2.pageSize),\n        previousPage: (ctx2) => ctx2.page === 1 ? null : ctx2.page - 1,\n        nextPage: (ctx2) => ctx2.page === ctx2.totalPages ? null : ctx2.page + 1,\n        pageRange: (ctx2) => {\n          const start = (ctx2.page - 1) * ctx2.pageSize;\n          const end = start + ctx2.pageSize;\n          return { start, end };\n        },\n        isValidPage: (ctx2) => ctx2.page >= 1 && ctx2.page <= ctx2.totalPages\n      },\n      on: {\n        SET_COUNT: [\n          {\n            guard: \"isValidCount\",\n            actions: [\"setCount\", \"goToFirstPage\"]\n          },\n          {\n            actions: \"setCount\"\n          }\n        ],\n        SET_PAGE: {\n          guard: \"isValidPage\",\n          actions: \"setPage\"\n        },\n        SET_PAGE_SIZE: {\n          actions: \"setPageSize\"\n        },\n        PREVIOUS_PAGE: {\n          guard: \"canGoToPrevPage\",\n          actions: \"goToPrevPage\"\n        },\n        NEXT_PAGE: {\n          guard: \"canGoToNextPage\",\n          actions: \"goToNextPage\"\n        }\n      },\n      states: {\n        idle: {}\n      }\n    },\n    {\n      guards: {\n        isValidPage: (ctx2, evt) => evt.page >= 1 && evt.page <= ctx2.totalPages,\n        isValidCount: (ctx2, evt) => ctx2.page > evt.count,\n        canGoToNextPage: (ctx2) => ctx2.page < ctx2.totalPages,\n        canGoToPrevPage: (ctx2) => ctx2.page > 1\n      },\n      actions: {\n        setCount(ctx2, evt) {\n          ctx2.count = evt.count;\n        },\n        setPage(ctx2, evt) {\n          set.page(ctx2, evt.page);\n        },\n        setPageSize(ctx2, evt) {\n          ctx2.pageSize = evt.size;\n        },\n        goToFirstPage(ctx2) {\n          set.page(ctx2, 1);\n        },\n        goToPrevPage(ctx2) {\n          set.page(ctx2, ctx2.page - 1);\n        },\n        goToNextPage(ctx2) {\n          set.page(ctx2, ctx2.page + 1);\n        },\n        setPageIfNeeded(ctx2, _evt) {\n          if (ctx2.isValidPage)\n            return;\n          set.page(ctx2, 1);\n        }\n      }\n    }\n  );\n}\nvar set = {\n  page: (ctx, value) => {\n    if (isEqual(ctx.page, value))\n      return;\n    ctx.page = value;\n    ctx.onPageChange?.({ page: ctx.page, pageSize: ctx.pageSize });\n  }\n};\nexport {\n  anatomy,\n  connect,\n  machine\n};\n//# sourceMappingURL=index.mjs.map","import * as pagination from '@zag-js/pagination';\nimport { normalizeProps, useMachine } from '@zag-js/react';\nimport { useId } from 'react';\nimport Button from './Button';\n\ninterface PaginationProps {\n  totalItems: number;\n  page: number;\n  pageSize: number;\n  onPageChange?: (details: pagination.PageChangeDetails) => void;\n}\n\nexport const Pagination = ({\n  totalItems,\n  page,\n  pageSize,\n  onPageChange,\n}: PaginationProps) => {\n  const id = useId();\n  const [state, send] = useMachine(\n    pagination.machine({\n      id,\n      count: totalItems,\n      page,\n      pageSize,\n      onPageChange,\n    })\n  );\n\n  const api = pagination.connect(state, send, normalizeProps);\n\n  return (\n    <div className=\"py-4 px-5 sm:py-3 sm:px-4\">\n      {api.totalPages > 1 && (\n        <nav {...api.rootProps}>\n          <ul className=\"inline-flex gap-2 items-center flex-wrap\">\n            <li>\n              <Button disabled={api.isFirstPage} {...api.prevTriggerProps}>\n                Previous\n              </Button>\n            </li>\n            {api.pages.map((page, i) => {\n              if (page.type === 'page')\n                return (\n                  <li\n                    {...api.getItemProps(page)}\n                    className={`cursor-pointer text-xs px-2 py-1 md:px-3 md:py-2 border border-gray-800 h-full grid place-items-center ${\n                      api.page === page.value\n                        ? 'bg-primary-600'\n                        : 'bg-transparent'\n                    }`}\n                    key={page.value}\n                  >\n                    <span>{page.value}</span>\n                  </li>\n                );\n              else\n                return (\n                  <li className=\"cursor-pointer\" key={`ellipsis-${i}`}>\n                    <span {...api.getEllipsisProps({ index: i })}>&#8230;</span>\n                  </li>\n                );\n            })}\n            <li>\n              <Button disabled={api.isLastPage} {...api.nextTriggerProps}>\n                Next\n              </Button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </div>\n  );\n};\n","import { useNavigate, useSearchParams } from 'react-router-dom';\nimport useHNSearch from '../hooks/useHNSearch';\nimport Article from '../components/Article';\nimport { Progress } from '../components/Progress';\nimport EmptyView from '../components/EmptyView';\nimport Button from '../components/Button';\nimport PageLayout from '../components/PageLayout';\nimport { Pagination } from '../components/Pagination';\nimport { queryParamsMapping } from '../constants';\n\nconst Home = () => {\n  const { data, isLoading, isError, isFetching, refetch } = useHNSearch();\n  const navigate = useNavigate();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const setFilterValue = (filterName: string, filterValue?: string) => {\n    searchParams.set(filterName, filterValue!);\n    setSearchParams(searchParams);\n  };\n\n  if (isLoading) {\n    return (\n      <PageLayout>\n        <div className=\"sticky top-0\">\n          <Progress isIntermediate={isFetching} />\n        </div>\n        <EmptyView\n          title=\"Loading...\"\n          description=\"Loading your results. Please wait a moment\"\n        />\n      </PageLayout>\n    );\n  }\n\n  if (isError || !data) {\n    return (\n      <PageLayout>\n        <EmptyView\n          title=\"Error\"\n          description=\"There was an error in completing your request. Please try again\"\n          actions={\n            <Button onClick={() => refetch()} disabled={isFetching}>\n              Retry\n            </Button>\n          }\n        />\n      </PageLayout>\n    );\n  }\n\n  if (data.hits.length === 0) {\n    return (\n      <PageLayout>\n        <EmptyView\n          title=\"No results found\"\n          description=\"There are no results available currently. Please try updating the filters above and refresh below to check again\"\n          actions={\n            <Button onClick={() => refetch()} disabled={isFetching}>\n              Refresh\n            </Button>\n          }\n        />\n      </PageLayout>\n    );\n  }\n\n  return (\n    <PageLayout>\n      <div className=\"grid grid-rows-[auto_1fr_auto] overflow-auto\">\n        <div className=\"sticky top-0\">\n          <Progress isIntermediate={isFetching} />\n        </div>\n\n        <ol className=\"overflow-auto\">\n          {data.hits.map((hit) => (\n            <li key={hit.objectID}>\n              <Article\n                onClick={(e) => {\n                  e.preventDefault();\n                  navigate(`/${hit.objectID}`);\n                }}\n                commentsCount={hit.num_comments}\n                createdAt={hit.created_at}\n                createdBy={hit.author}\n                title={hit.title}\n                link={hit.url}\n                upvotesCount={hit.points}\n              />\n            </li>\n          ))}\n        </ol>\n        <div className=\"sticky bottom-0 bg-gray-100 dark:bg-gray-900 dark:text-gray-300 grid place-items-center w-full\">\n          <Pagination\n            page={data.page + 1}\n            pageSize={data.hitsPerPage}\n            totalItems={data.nbPages * data.hitsPerPage}\n            onPageChange={({ page }) => {\n              setFilterValue(queryParamsMapping.page, page.toString());\n            }}\n          />\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default Home;\n"],"names":["useHNSearch","searchParams","useSearchParams","tags","queryParamsMapping","searchQuery","page","queryString","params","searchBy","useQuery","api","hnAPIBaseURL","Article","title","createdBy","upvotesCount","commentsCount","createdAt","link","onClick","jsx","jsxs","e","timeAgo","anatomy","createAnatomy","parts","dom","createScope","ctx","_a","index","_b","range","start","end","length","_","idx","transform","items","value","ELLIPSIS","getRange","totalPageNumbers","firstPageIndex","lastPageIndex","leftSiblingIndex","rightSiblingIndex","showLeftEllipsis","showRightEllipsis","itemCount","rightRange","middleRange","getTransformedRange","connect","state","send","normalize","totalPages","translations","previousPage","nextPage","pageRange","isButton","isFirstPage","isLastPage","data","count","size","page2","props","isCurrentPage","dataAttr","machine","userContext","compact","createMachine","ctx2","evt","set","_evt","isEqual","Pagination","totalItems","pageSize","onPageChange","id","useId","useMachine","pagination.machine","pagination.connect","normalizeProps","Button","i","createElement","Home","isLoading","isError","isFetching","refetch","navigate","useNavigate","setSearchParams","setFilterValue","filterName","filterValue","PageLayout","Progress","EmptyView","hit"],"mappings":"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","x_google_ignoreList":[2]}